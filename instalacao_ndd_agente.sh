#!/bin/bash
set -e

### === CONFIGURA√á√ïES PERSONALIZ√ÅVEIS === ###
COMUNICACAO="direta"  # direta, proxy, gateway
CERT_ORIGEM="/caminho/para/certificado.cer"

PROXY_HOST="proxy.exemplo.com"
PROXY_PORT="3128"
PROXY_USER="usuario_proxy"
PROXY_PASS="senha_proxy"

GATEWAY_HOST="gateway.exemplo.com"
GATEWAY_PORT="9635"

### === VERIFICA√á√ÉO DE PERMISS√ÉO SUDO === ###
if ! sudo -v; then
    echo "‚ùå Voc√™ precisa de permiss√£o sudo para executar este script."
    exit 1
fi

### === PREPARA√á√ÉO DO AMBIENTE === ###
echo "üöÄ Iniciando a prepara√ß√£o do ambiente..."

echo "‚ö†Ô∏è Selecione o setor para esta configura√ß√£o: ‚ö†Ô∏è"
PS3="Digite o n√∫mero da op√ß√£o e pressione Enter: "
options=("Prefeitura (Administrativos)" "Escolas" "Sa√∫de")
select setor in "${options[@]}"; do
    case $REPLY in
        1) SETOR="adm"; break ;;
        2) SETOR="edu"; break ;;
        3) SETOR="sau"; break ;;
        *) echo "Op√ß√£o inv√°lida. Tente novamente." ;;
    esac
done
echo "Voc√™ escolheu o setor: $SETOR"

read -p "Digite o nome do setor ou unidade onde est√° realizando a configura√ß√£o: " UNIDADE
echo "Setor/unidade configurado: $UNIDADE"

echo "Definindo hostname para ${SETOR}-${UNIDADE}..."
sudo hostnamectl set-hostname "${SETOR}-${UNIDADE}"

### === ATUALIZA√á√ÉO DE PACOTES COM TRATAMENTO DE ERROS === ###
echo "üì° Verificando atualiza√ß√£o de pacotes configurados..."
if ! sudo apt-get update; then
    echo "‚ö†Ô∏è Erro ao atualizar pacotes. Tentando novamente com --fix-missing..."
    sudo apt-get update --fix-missing || { echo "‚ùå Falha ao atualizar pacotes."; exit 1; }
fi

echo "üöÄ Iniciando instala√ß√£o de pacotes dispon√≠veis..."
if ! sudo apt-get upgrade -y; then
    echo "‚ö†Ô∏è Erro durante o upgrade. Tentando corrigir depend√™ncias..."
    sudo apt-get install -f -y
    sudo apt-get autoremove -y
    sudo apt-get autoclean -y
    echo "üîÑ Tentando novamente o upgrade..."
    if ! sudo apt-get upgrade -y; then
        echo "‚ùå N√£o foi poss√≠vel concluir o upgrade de pacotes."
        exit 1
    fi
fi

### === VERIFICA√á√ÉO SELINUX === ###
echo "üîß Verificando SELinux..."
if command -v getenforce &> /dev/null; then
    selinux_status=$(getenforce)
    echo "‚Üí SELinux est√°: $selinux_status"
    if [ "$selinux_status" = "Enforcing" ]; then
        echo "‚ö†Ô∏è Alterando SELinux para permissive..."
        sudo sed -i 's/^SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config
        echo "‚ö†Ô∏è √â necess√°rio reiniciar o sistema para aplicar as mudan√ßas no SELinux."
        read -p "Deseja reiniciar agora? (s/N): " resp
        if [[ "$resp" =~ ^[sS]$ ]]; then
            sudo reboot
            exit 0
        else
            echo "‚ö†Ô∏è Reinicializa√ß√£o adiada. Continue por sua conta e risco."
        fi
    fi
else
    echo "‚úîÔ∏è SELinux n√£o est√° ativo ou n√£o est√° instalado."
    sleep 2
fi

### === AJUSTES SYSCTL === ###
echo "üîß Ajustando sysctl.conf para aumentar limites do inotify..."
sudo sed -i '/fs.inotify.max_user_instances/d' /etc/sysctl.conf
sudo sed -i '/fs.inotify.max_user_watches/d' /etc/sysctl.conf
echo "fs.inotify.max_user_instances=8192" | sudo tee -a /etc/sysctl.conf
echo "fs.inotify.max_user_watches=524288" | sudo tee -a /etc/sysctl.conf
sudo sysctl -p
echo "‚úÖ Ajustes no sysctl.conf aplicados com sucesso."

### === INSTALA√á√ÉO DO AGENTE NDD === ###
echo -e "\nüöÄ Iniciando a instala√ß√£o do agente NDD..."
if ! sudo apt install ndd-dca-and-cloud-connector; then
    echo "‚ö†Ô∏è Erro durante a instala√ß√£o do agente. Tentando corrigir problemas..."
    sudo apt-get install -f -y
    sudo apt-get autoremove -y
    sudo apt-get autoclean -y
    echo "üîÑ Tentando novamente a instala√ß√£o..."
    if ! sudo apt install ndd-dca-and-cloud-connector --fix-missing; then
        echo "‚ùå N√£o foi poss√≠vel concluir a instala√ß√£o do agente NDD mesmo ap√≥s as corre√ß√µes."
        exit 1
    fi
fi
echo "‚úÖ Agente NDD instalado com sucesso!"

### === CRIA√á√ÉO DO SCRIPT DE VERIFICA√á√ÉO DE M√öLTIPLOS SERVI√áOS COM RESUMO === ###
cat <<'EOF' | sudo tee /usr/local/bin/verificar_ndd.sh > /dev/null
#!/bin/bash

SERVICOS=(
    "NDDDCAandCloudConnector.service"
    "NDDPrinterUsbMonitor.service"
    "NDDPrinterMonitor.service"
)

echo "üîç Iniciando verifica√ß√£o dos servi√ßos NDD..."

for SERVICE in "${SERVICOS[@]}"; do
    if systemctl is-active --quiet "$SERVICE"; then
        STATUS="ativo ‚úÖ"
    else
        echo "‚ö†Ô∏è O servi√ßo $SERVICE n√£o est√° rodando. Tentando iniciar e habilitar no boot..."
        sudo systemctl enable "$SERVICE"
        sudo systemctl start "$SERVICE"
        if systemctl is-active --quiet "$SERVICE"; then
            STATUS="iniciado e habilitado ‚úÖ"
        else
            STATUS="falha ‚ùå"
        fi
    fi
    echo "‚Ä¢ $SERVICE ‚Üí $STATUS"
done

echo "üîπ Resumo final da verifica√ß√£o conclu√≠da!"
EOF

sudo chmod +x /usr/local/bin/verificar_ndd.sh

### === CRIA√á√ÉO DO SERVI√áO SYSTEMD PARA RODAR NO BOOT === ###
cat <<EOF | sudo tee /etc/systemd/system/verificar-ndd.service > /dev/null
[Unit]
Description=Verifica os servi√ßos NDD no boot
After=network.target

[Service]
ExecStart=/usr/local/bin/verificar_ndd.sh
Type=oneshot

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reexec
sudo systemctl daemon-reload
sudo systemctl enable verificar-ndd.service
echo "‚úÖ Servi√ßo de verifica√ß√£o criado e habilitado para iniciar com o sistema."

### === HOSTNAME E IP === ###
echo "üì° Hostname da m√°quina: $(hostname)"
IP_LOCAL=$(ip -4 addr show $(ip route get 8.8.8.8 | awk '{print $5; exit}') | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
echo "üì° IP local da m√°quina: $IP_LOCAL"

echo "‚úÖ Instala√ß√£o e configura√ß√£o conclu√≠das com sucesso!"
